联合索引

联合索引其实很简单，相对于一般索引值有一个字段，联合索引可以为多个字段创建一个索引，它的原理也很简单。
比如，我们在（a,b,c）字段上创建一个联合索引，则索引记录会首先按照A字段排序，然后在按照B字段排序，然后再是c字段，
因此联合索引的特点就是：
 1 第一个字段一定有序的
 2 当第一个字段值相等的时候，第二个字段又有序的，比如下表中当A=2的时候，所有B的值是有序排列的，依次列推，当同一个B
 值相等C字段是有序排列的



最左前缀原理

其实联合索引的查找就和查字典是一样的，现根据第一个字母查，然后再根据第二个字母查，或者只根据第一个字母查，但不能跳过第一个字母
从第二个字母开始查。这就是所谓的最左前缀索引原理。

如果用到了最左前缀索引，但是顺序颠倒会用到索引吗？

如果用到了最左前缀索引而只是颠倒了顺序，也是可以用到索引的，因为MySQL查询优化引擎会判断纠正这条SQL语句，该以什么样的顺序执行效率最高，
最后才生成真正的执行计划。但是我们最好还是按照索引顺序来查询，这一样查询优化器就不用重新编译了。

前缀索引

除了联合索引之外，对MySQL来说其实还有一种前缀索引。前缀索引就使用列的前缀代替整个列作为索引key，当前缀的长度是合适时，可以做到既使得
前缀索引的选择性接近全列索引，同时因为索引key变短而减少了索引文件的大小和维护开销。

适合使用前缀索引的情况

1 字符串列（varchar，char，text等），需要进行全字段匹配或者前匹配。也就是=‘xxx’或者like‘xxx%’
2 字符串本身可能较长，而且前几个字符就开始不同。中国人的姓名使用前缀索引的意义不大，因为中国人的名字
都很短，另外对收件地址使用前缀索引也不实用。因为一方面收件地址一般都是以XX省开头，也就是说前几个字符都是差不多的，而且收件地址进行检索
一般都是like ‘%xxx%’，不会用到前缀匹配。相反对外国人的姓名可以使用前缀索引，因为字符较长，而且前几个字符的选择性比较高。同样电子邮件也
可以是一个可以使用前缀索引的字段，

3 前一半字符索引选择性就已经接近于全字段的索引选择性。如果整个字段的长度为20，索引选择性为0.9，而我们对前10个字符建立前索引的选择性为0.5，那么
我们需要继续加大前缀字符的长度，但是这个时候前缀索引的优势已经不明显，没有建立前缀索引的必要了。

MySQL的前缀索引能有效的减小索引文件的大小，提高索引的速度。但是前缀索引也有它的坏处：MySQL不能在ORDER BY或GROUP BY中使用前缀索引。也不能把他们
用作覆盖索引（covering index）







